{
  "_args": [
    [
      {
        "raw": "google-home-notifier",
        "scope": null,
        "escapedName": "google-home-notifier",
        "name": null,
        "rawSpec": "google-home-notifier",
        "spec": "/home/pi/Develop/g_h_hack/google-home-notifier",
        "type": "directory"
      },
      "/home/pi/Develop/g_h_hack"
    ]
  ],
  "_from": "google-home-notifier",
  "_id": "google-home-notifier@1.2.0",
  "_inCache": true,
  "_location": "/google-home-notifier",
  "_phantomChildren": {},
  "_requested": {
    "raw": "google-home-notifier",
    "scope": null,
    "escapedName": "google-home-notifier",
    "name": null,
    "rawSpec": "google-home-notifier",
    "spec": "/home/pi/Develop/g_h_hack/google-home-notifier",
    "type": "directory"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "file:google-home-notifier",
  "_shasum": "0f804cd25769b4cee224af2a5b32114e78035bad",
  "_shrinkwrap": null,
  "_spec": "google-home-notifier",
  "_where": "/home/pi/Develop/g_h_hack",
  "author": {
    "name": "Noel Portugal"
  },
  "dependencies": {
    "body-parser": "^1.15.2",
    "castv2-client": "^1.1.2",
    "express": "^4.14.0",
    "google-tts-api": "https://github.com/darrencruse/google-tts/tarball/british-voice",
    "mdns": "^2.3.3",
    "ngrok": "^2.2.4"
  },
  "description": "Send notifications to Google Home",
  "devDependencies": {},
  "gitHead": "9f2e6b16cfc5c1246aa6a2137547ef5a973500e2",
  "keywords": [
    "google home",
    "notifications",
    "notifier"
  ],
  "license": "MIT",
  "main": "google-home-notifier.js",
  "name": "google-home-notifier",
  "optionalDependencies": {},
  "readme": "# google-home-notifier\nSend notifications to Google Home\n\n#### Installation\n```sh\n$ npm install google-home-notifier\n```\n\n#### Usage\n```javascript\nvar googlehome = require('google-home-notifier');\nvar language = 'pl'; // if not set 'us' language will be used\n\ngooglehome.device('Google Home', language); // Change to your Google Home name\n// or if you know your Google Home IP\n// googlehome.ip('192.168.1.20', language);\n\ngooglehome.notify('Hey Foo', function(res) {\n  console.log(res);\n});\n```\n\n#### Listener\nIf you want to run a listener, take a look at the example.js file. You can run this from a Raspberry Pi, pc or mac. \nThe example uses ngrok so the server can be reached from outside your network. \nI tested with ifttt.com Maker channel and it worked like a charm.\n\n```sh\n$ git clone https://github.com/noelportugal/google-home-notifier\n$ cd google-home-notifier\n$ npm install\n$ node example.js\nEndpoints:\n    http://192.168.1.20:8091/google-home-notifier\n    https://xxxxx.ngrok.io/google-home-notifier\nGET example:\ncurl -X GET https://xxxxx.ngrok.io/google-home-notifier?text=Hello+Google+Home  - to play given text\ncurl -X GET https://xxxxx.ngrok.io/google-home-notifier?text=http%3A%2F%2Fdomain%2Ffile.mp3 - to play from given url\nPOST example:\ncurl -X POST -d \"text=Hello Google Home\" https://xxxxx.ngrok.io/google-home-notifier - to play given text\ncurl -X POST -d \"http://domain/file.mp3\" https://xxxxx.ngrok.io/google-home-notifier - to play from given url\n\n```\n#### Raspberry Pi\nIf you are running from Raspberry Pi make sure you have the following before nunning \"npm install\":\nUse the latest nodejs dist.\n```sh\ncurl -sL https://deb.nodesource.com/setup_7.x | sudo -E bash -\nsudo apt-get install nodejs\n```\nAlso install these packages:\n```sh\nsudo apt-get install git-core libnss-mdns libavahi-compat-libdnssd-dev\n```\n\n## After \"npm install\"\n\nModify the following file \"node_modules/mdns/lib/browser.js\"\n```sh\nvi node_modules/mdns/lib/browser.js\n```\nFind this line:\n```javascript\nBrowser.defaultResolverSequence = [\n  rst.DNSServiceResolve(), 'DNSServiceGetAddrInfo' in dns_sd ? rst.DNSServiceGetAddrInfo() : rst.getaddrinfo()\n, rst.makeAddressesUnique()\n];\n```\nAnd change to:\n```javascript\nBrowser.defaultResolverSequence = [\n  rst.DNSServiceResolve(), 'DNSServiceGetAddrInfo' in dns_sd ? rst.DNSServiceGetAddrInfo() : rst.getaddrinfo({families:[4]})\n, rst.makeAddressesUnique()\n];\n```\n",
  "readmeFilename": "README.md",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "version": "1.2.0"
}
